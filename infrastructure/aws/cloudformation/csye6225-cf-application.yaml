AWSTemplateFormatVersion: "2010-09-09"
Resources: 
  # #Create VPC:
  # csye6225VPC:
  #   Type: AWS::EC2::VPC
  #   Properties:
  #     CidrBlock: 10.0.0.0/16
  #     EnableDnsSupport: false
  #     EnableDnsHostnames: false
  #     Tags:
  #     - Key: Name
  #       Value:  !Join ['', [!Ref "AWS::StackName", "-csye6225","-vpc" ]]

  # WebappSecurityGroup:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: Security Group for Web Servers
  #     VpcId: !Ref csye6225VPC
  #     SecurityGroupIngress:
  #     - IpProtocol: tcp
  #       FromPort: 22
  #       ToPort: 22
  #       CidrIp: 0.0.0.0/0
  #     - IpProtocol: tcp
  #       FromPort: 80
  #       ToPort: 80
  #       CidrIp: 0.0.0.0/0
  #     - IpProtocol: tcp
  #       FromPort: 443
  #       ToPort: 443
  #       CidrIp: 0.0.0.0/0
  #     Tags:
  #     - Key: Name
  #       Value: WebappSecurityGroup


  # EC2Instance:
  #   Type: AWS::EC2::Instance
  #   Properties:
  #     InstanceType: t2.micro
  #     SecurityGroups:
  #     - Ref: WebappSecurityGroup
  #     KeyName:
  #       Ref: KeyName
  #     BlockDeviceMappings: 
  #       - DeviceName: /dev/sdm
  #         Ebs: 
  #           VolumeType: gp2
  #           DeleteOnTermination: true
  #           VolumeSize: 20
  #     ImageId: ami-9887c6e7

  # DBSecurityGroup:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: Security Group for Web Servers
  #     VpcId: !ImportValue vpcId-1
  #     SecurityGroupIngress:
  #     - IpProtocol: tcp
  #       FromPort: "3306"
  #       ToPort: "3306"
  #       CidrIp: 0.0.0.0/0
  #     Tags:
  #     - Key: Name
  #       Value: DBSecurityGroup
  
  # dynamoDB: 
  #   Type: AWS::DynamoDB::Table
  #   Properties: 
  #     AttributeDefinitions: 
  #       - 
  #         AttributeName: "id"
  #         AttributeType: "S"
  #     KeySchema: 
  #       - 
  #         AttributeName: "id"
  #         KeyType: "HASH"
  #     ProvisionedThroughput: 
  #       ReadCapacityUnits: "5"
  #       WriteCapacityUnits: "5"
  #     TableName: "csye6225"
# RDS Subnet Group
  rdsSubnetGroup: 
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: "Subnet for RDS instances"
      SubnetIds:
        - !ImportValue PublicSubA
        - !ImportValue PublicSubB
        - !ImportValue PublicSubC

#RDS Instance
  rdsInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 5
      Engine: MySQL
      DBInstanceClass: db.t2.medium
      MultiAZ: false
      DBInstanceIdentifier: csye6225-spring2019
      MasterUsername: csye6225master
      MasterUserPassword: csye6225password
      PubliclyAccessible: true
      DBSubnetGroupName: !Ref rdsSubnetGroup
      DBName: csye6225
      # DBSecurityGroups: 
      #   Ref: DBSecurityGroup